name: Build

on:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Compile
        run: |
          BUILD=$(($(git rev-list --count --first-parent HEAD)+100))
          VERSION=$(($(git rev-list --count --first-parent HEAD)))
          TODAY=$(date +"%d.%m.%y")
          echo "BUILD=${BUILD}" >> "$GITHUB_ENV"
          echo "TODAY=${TODAY}" >> "$GITHUB_ENV"
          echo "Build number ${BUILD}"

          php manager.php insert
          php manager.php insert_charnames

          mkdir -p assets/ch1/HigurashiEp01_Data/StreamingAssets/Update
          mkdir -p assets/ch2/HigurashiEp02_Data/StreamingAssets/Update
          mkdir -p assets/ch3/HigurashiEp03_Data/StreamingAssets/Update
          mkdir -p assets/ch4/HigurashiEp04_Data/StreamingAssets/Update
          mkdir -p assets/ch5/HigurashiEp05_Data/StreamingAssets/Update
          mkdir -p assets/ch6/HigurashiEp06_Data/StreamingAssets/Update
          mkdir -p assets/ch7/HigurashiEp07_Data/StreamingAssets/Update
          mkdir -p assets/ch8/HigurashiEp08_Data/StreamingAssets/Update
          mkdir -p assets/ch9/HigurashiEp09_Data/StreamingAssets/Update
          mkdir -p assets/ch10/HigurashiEp10_Data/StreamingAssets/Update
          
          cp output-scripts/ch1/* assets/ch1/HigurashiEp01_Data/StreamingAssets/Update
          cp output-scripts/ch2/* assets/ch2/HigurashiEp02_Data/StreamingAssets/Update
          cp output-scripts/ch3/* assets/ch3/HigurashiEp03_Data/StreamingAssets/Update
          cp output-scripts/ch4/* assets/ch4/HigurashiEp04_Data/StreamingAssets/Update
          cp output-scripts/ch5/* assets/ch5/HigurashiEp05_Data/StreamingAssets/Update
          cp output-scripts/ch6/* assets/ch6/HigurashiEp06_Data/StreamingAssets/Update
          cp output-scripts/ch7/* assets/ch7/HigurashiEp07_Data/StreamingAssets/Update
          cp output-scripts/ch8/* assets/ch8/HigurashiEp08_Data/StreamingAssets/Update
          cp output-scripts/ch9/* assets/ch9/HigurashiEp09_Data/StreamingAssets/Update
          cp output-scripts/ch10/* assets/ch10/HigurashiEp10_Data/StreamingAssets/Update
          
          mkdir -p out

          cd assets/ch1
          zip -qry ../../out/1_onikakushi-turkish.zip HigurashiEp01_Data || exit 1

          cd ../../assets/ch2
          zip -qry ../../out/2_watanagashi-turkish.zip HigurashiEp02_Data || exit 1

          cd ../../assets/ch3
          zip -qry ../../out/3_tatarigoroshi-turkish.zip HigurashiEp03_Data || exit 1

          cd ../../assets/ch4
          zip -qry ../../out/4_himatsubushi-turkish.zip HigurashiEp04_Data || exit 1
          
          cd ../../assets/ch5
          zip -qry ../../out/5_meakashi-turkish.zip HigurashiEp05_Data || exit 1

          cd ../../assets/ch6
          zip -qry ../../out/6_tsumihoroboshi-turkish.zip HigurashiEp06_Data || exit 1

          cd ../../assets/ch7
          zip -qry ../../out/7_minagoroshi-turkish.zip HigurashiEp07_Data || exit 1

          cd ../../assets/ch8
          zip -qry ../../out/8_matsuribayashi-turkish.zip HigurashiEp08_Data || exit 1

          cd ../../assets/ch9
          zip -qry ../../out/9_rei-turkish.zip HigurashiEp09_Data || exit 1

          cd ../../assets/ch10
          zip -qry ../../out/10_hou-plus-turkish.zip HigurashiEp10_Data || exit 1

          cd ../..
          echo "Kurulum detayları için [buraya](https://witch-love.com/higurashi/installation) bakınız." >> release_notes.md

      - name: Release
        if: github.repository_owner == 'Witch-Love'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.BUILD }}
          release_name: Higurashi Turkish Files v${{ env.BUILD }}
          body_path: release_notes.md
          draft: false
          prerelease: false

      - name: Upload Onikakushi Files
        if: github.repository_owner == 'Witch-Love'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/1_onikakushi-turkish.zip
          asset_name: 01_onikakushi-turkish.zip
          asset_content_type: application/zip

      - name: Upload Watanagashi Files
        if: github.repository_owner == 'Witch-Love'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/2_watanagashi-turkish.zip
          asset_name: 02_watanagashi-turkish.zip
          asset_content_type: application/zip

      - name: Upload Tatarigoroshi Files
        if: github.repository_owner == 'Witch-Love'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/3_tatarigoroshi-turkish.zip
          asset_name: 03_tatarigoroshi-turkish.zip
          asset_content_type: application/zip

      - name: Upload Himatsubushi Files
        if: github.repository_owner == 'Witch-Love'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/4_himatsubushi-turkish.zip
          asset_name: 04_himatsubushi-turkish.zip
          asset_content_type: application/zip

      - name: Upload Meakashi Files
        if: github.repository_owner == 'Witch-Love'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/5_meakashi-turkish.zip
          asset_name: 05_meakashi-turkish.zip
          asset_content_type: application/zip

      - name: Upload Tsumihoroboshi Files
        if: github.repository_owner == 'Witch-Love'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/6_tsumihoroboshi-turkish.zip
          asset_name: 06_tsumihoroboshi-turkish.zip
          asset_content_type: application/zip

      - name: Upload Minagoroshi Files
        if: github.repository_owner == 'Witch-Love'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/7_minagoroshi-turkish.zip
          asset_name: 07_minagoroshi-turkish.zip
          asset_content_type: application/zip

      - name: Upload Matsuribayashi Files
        if: github.repository_owner == 'Witch-Love'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/8_matsuribayashi-turkish.zip
          asset_name: 08_matsuribayashi-turkish.zip
          asset_content_type: application/zip

      - name: Upload Rei Files
        if: github.repository_owner == 'Witch-Love'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/9_rei-turkish.zip
          asset_name: 09_rei-turkish.zip
          asset_content_type: application/zip

      - name: Upload Hou Plus Files
        if: github.repository_owner == 'Witch-Love'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/10_hou-plus-turkish.zip
          asset_name: 10_hou-plus-turkish.zip
          asset_content_type: application/zip